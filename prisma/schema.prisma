// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
}

model User {
  id         String  @id @default(cuid())
  externalId String? @unique

  quotaLimit Int
  plan       Plan @default(FREE)

  email     String   @unique
  apiKey    String   @unique @default(cuid())
  discordId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  forms Form[]
  // events           Event[]
  // Quota           Quota[]

  @@index([email, apiKey])
}

model Form {
  id          String  @id @default(cuid())
  published   Boolean @default(false)
  name        String
  description String  @default("")
  content     Json    @default("[]") // form JSONStringified form
  visits      Int     @default(0)
  submissions Int     @default(0)

  shareURL String @unique @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  formSubmissions FormSubmission[]
}

model FormSubmission {
  id   String @id @default(cuid())
  data Json   @default("{}") // Contains the JSONStringified form submission

  formId String
  form   Form   @relation(fields: [formId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Field {
//   id        String    @id @default(uuid())
//   name      String
//   type      FieldType // e.g., "text", "number", "date", etc.
//   tableId   String    @map("table_id")
//   options   String?
//   cells     Cell[]
//   createdAt DateTime  @default(now()) @map("created_at")
//   updatedAt DateTime  @updatedAt @map("updated_at")
//
//   table Table @relation(fields: [tableId], references: [id], onDelete: Cascade)
// }
//
// model Record {
//   id        String   @id @default(uuid())
//   tableId   String   @map("table_id")
//   cells     Cell[]
//   createdAt DateTime @default(now()) @map("created_at")
//
//   table Table @relation(fields: [tableId], references: [id], onDelete: Cascade)
// }
